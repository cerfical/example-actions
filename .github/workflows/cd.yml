name: CD

on:
    push:
        tags:
            - "v*"

jobs:
    build:
        name: Build for ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest]

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Install Go
              uses: actions/setup-go@v5
              with:
                  go-version-file: go.mod

            - name: Install dependencies
              run: go mod download

            - name: Build project
              run: go build -o app main.go

            - name: Get arch-os string
              shell: bash
              run: |
                  ARCH=$(uname -m)
                  OS=$(uname -s | tr '[:upper:]' '[:lower:]')
                  echo "TARGET=${ARCH}-${OS}" >> $GITHUB_ENV
                  echo "Target is ${ARCH}-${OS}"

            - name: Archive build artifacts
              shell: bash
              run: |
                  mkdir dist
                  if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
                    zip -j dist/app-windows.zip app
                  else
                    tar -czf dist/app-linux.tar.gz -C . app
                  fi

            - name: Upload archive
              uses: actions/upload-artifact@v4
              with:
                  name: build-${{ matrix.os }}
                  path: dist/*

    release:
        name: Create release
        needs: build
        runs-on: ubuntu-latest

        steps:
            - name: Download build artifacts
              uses: actions/download-artifact@v4
              with:
                  path: ./artifacts

            - name: Upload release
              uses: softprops/action-gh-release@v2
              with:
                  files: ./artifacts/**/*
