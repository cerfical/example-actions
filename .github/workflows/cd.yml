name: CD

on:
    push:
        tags:
            - "v*"

jobs:
    build:
        name: Build for ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest]

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Install Go
              uses: actions/setup-go@v5
              with:
                  go-version-file: go.mod

            - name: Install dependencies
              run: go mod download

            - name: Build project
              shell: bash
              run: |
                  ARCH=$(go env GOARCH)
                  OS=$(go env GOOS)
                  BUILD_DIR=build/${OS}/${ARCH}
                  echo "Building for ${ARCH}-${OS}"

                  mkdir -p ${BUILD_DIR} && cd ${BUILD_DIR}
                  for cmd in ../cmd/*/; do
                    go build ${cmd}
                  done

            - name: Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: build-${{ matrix.os }}
                  path: build/**/*

    release:
        name: Create release
        needs: build
        runs-on: ubuntu-latest

        steps:
            - name: Download build artifacts
              uses: actions/download-artifact@v4
              with:
                  merge-multiple: true
                  path: ./build

            - name: Archive build artifacts
              run: |
                  mkdir dist

                  for system_dir in ./build/*/; do
                      system=$(basename "$system_dir" | tr '[:upper:]' '[:lower:]')

                      for platform_dir in $(find "$system_dir" -maxdepth 1 -mindepth 1 -type d); do
                          arch=$(basename "$platform_dir" | tr '[:upper:]' '[:lower:]')

                          platform=${arch}-${system}
                          echo "Release platform: ${platform}"

                          output_file="./dist/app-${platform}"
                          case "$system" in
                              *win*)
                                  zip -jr "${output_file}.zip" "$platform_dir"
                                  ;;
                              *linux*)
                                  cd ${platform_dir} && tar -vczf "../../../${output_file}.tar.gz" * && cd -
                                  ;;
                              *)
                                  echo "Unknown platform: ${platform}"
                                  exit 1
                                  ;;
                          esac
                      done
                  done

            - name: Upload release
              uses: softprops/action-gh-release@v2
              with:
                  files: ./dist/**/*
